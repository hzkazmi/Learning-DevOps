{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./src/hooks/useProgramsData.js","webpack:///./src/components/ListOfPrograms.js","webpack:///./node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","webpack:///./src/pages/programs/index.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js"],"names":["Card","props","ref","classes","className","_props$raised","raised","other","root","elevation","overflow","name","UseProgramsData","allContentfulFranchisee","edges","node","courseCatalog","programsAvailable","styles","cardMedia","height","cardStyle","color","withStyles","programs","Grid","alignItems","container","direction","justify","spacing","map","program","item","key","slug","md","xs","style","CardMedia","image","file","url","CardContent","Typography","component","gutterBottom","variant","to","state","title","dangerouslySetInnerHTML","__html","shortDescription","childMarkdownRemark","html","MEDIA_COMPONENTS","children","_props$component","Component","src","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","media","img","undefined","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","withRoot","padding","paddingBottom"],"mappings":"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","file":"component---src-pages-programs-index-js-88b459185836a4d644e8.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\n//https://www.gatsbyjs.org/docs/use-static-query/\n\nconst UseProgramsData = () => {\n  const data = useStaticQuery(graphql`\n    {\n      allContentfulFranchisee {\n        edges {\n          node {\n            courseCatalog {\n              programsAvailable {\n                slug\n                title\n                shortDescription {\n                  childMarkdownRemark {\n                    html\n                  }\n                }\n                image {\n                  file {\n                    url\n                  }\n                }\n                longDescription {\n                  json\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  //return <pre>{JSON.stringify(data, null, 4)}</pre>\n  return data.allContentfulFranchisee.edges[0].node.courseCatalog\n    .programsAvailable;\n};\n\nexport default UseProgramsData;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withPrefix } from \"gatsby\";\nimport withStyles from \"@material-ui/styles/withStyles\";\nimport programs from \"../hooks/useProgramsData\";\n\nconst styles = {\n  cardMedia: {\n    height: \"200px\",\n  },\n  cardStyle: {\n    height: \"400px\",\n  },\n  color: {\n    color: \"black\",\n  },\n};\n\nconst ListOfPrograms = (props) => {\n  const { classes } = props;\n  //console.log(\"AAAAAAAAAAAA\");\n  const programsAvailable = programs();\n  //console.log(programsAvailable);\n  return (\n    <Grid\n      alignItems=\"flex-start\"\n      container\n      direction=\"row\"\n      justify=\"center\"\n      spacing={8}\n    >\n      {programsAvailable.map((program) => {\n        //console.log('zzzzzzzzzzzzzzzzzz ' + program.image.file.url);\n        return (\n          <Grid item key={\"/programs/\" + program.slug} md={6} xs={12}>\n            <Card style={styles.cardStyle}>\n              <CardMedia\n                className={classes.cardMedia}\n                image={program.image.file.url}\n              />\n              <CardContent>\n                <Typography component=\"h2\" gutterBottom variant=\"h5\">\n                  <Link\n                    to={\"/programs/\" + program.slug}\n                    state={{ program: program }}\n                  >\n                    Certified {program.title} Professional\n                  </Link>\n                </Typography>\n                \n                <Typography\n                  component=\"p\"\n                  dangerouslySetInnerHTML={{\n                    __html: program.shortDescription.childMarkdownRemark.html,\n                  }}\n                ></Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ListOfPrograms);\n","import \"core-js/modules/es6.array.index-of\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Component for rendering image.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import withRoot from \"../../utils/withRoot\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport SEO from \"../../components/SEO\";\nimport Page from \"../../components/Page\";\n//import List from \"../../components/List\";\nimport ListOfPrograms from \"../../components/ListOfPrograms\";\n\nconst Programs = (props) => {\n  //const programs = props.data.allMarkdownRemark.edges;\n  return (\n    <Page title=\"Certification Programs of Study\">\n      <SEO title=\"Certification Programs of Study\" />\n      {/*<List items={programs} />*/}\n      <ListOfPrograms />\n    </Page>\n  );\n};\n\n\n\nexport default withRoot(Programs);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);"],"sourceRoot":""}